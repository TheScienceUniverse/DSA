        -:    0:Source:tst/stream.c
        -:    0:Graph:./cov/test_stream.gcno
        -:    0:Data:./cov/test_stream.gcda
        -:    0:Runs:1
        -:    1:#include "../inc/test.h"
        -:    2:
function test_stream called 0 returned 0% blocks executed 0%
    #####:    3:void test_stream (void) {
    #####:    4:	printf (BOLD_YELLOW "Unit test starts..." BOLD_MAGENTA " [Stream]\n" RESET_STYLE);
    %%%%%:    4-block 2
call    0 never executed
        -:    5:
    #####:    6:	char* text = "Hello, World!\n";
    #####:    7:	size_t length = 14;
        -:    8:
    #####:    9:	Stream* stream = create_stream (length, (BYTE*) text);
call    0 never executed
    #####:   10:	Stream* ghost_stream = stream;
        -:   11:
        -:   12:	// printf ("%lu %lu\n", length, sizeof (stream -> text));
        -:   13:
        -:   14:	// display_stream_details (stream);
        -:   15:
    #####:   16:	TEST (NULL != stream, "Checked address non-null");
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:   16-block 5
call    2 never executed
    %%%%%:   16-block 6
call    3 never executed
    #####:   17:	TEST (length == stream -> length, "Checked block-size allocation");
    %%%%%:   17-block 7
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:   17-block 8
call    2 never executed
    %%%%%:   17-block 9
call    3 never executed
    #####:   18:	TEST (stream == ghost_stream, "Checked address validation");
    %%%%%:   18-block 10
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:   18-block 11
call    2 never executed
    %%%%%:   18-block 12
call    3 never executed
    #####:   19:	TEST (compare_raw_byte_stream (length, (BYTE*) text, stream -> base_addr), "Matched expected content");
    %%%%%:   19-block 13
call    0 never executed
branch  1 never executed (fallthrough)
branch  2 never executed
    %%%%%:   19-block 15
call    3 never executed
    %%%%%:   19-block 16
call    4 never executed
        -:   20:
        -:   21://	void** stream_addresses = capture_stream_addresses (stream);
        -:   22://	TEST (!is_stream_memory_erased (stream_addresses), "Stream existance check");
    #####:   23:	TEST (stream == ghost_stream, "Checked Stream existance");
    %%%%%:   23-block 17
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:   23-block 18
call    2 never executed
    %%%%%:   23-block 19
call    3 never executed
    #####:   24:	delete_stream (&stream);
    %%%%%:   24-block 20
call    0 never executed
    #####:   25:	TEST (stream != ghost_stream, "Checked Stream deletion");
branch  0 never executed (fallthrough)
branch  1 never executed
    %%%%%:   25-block 22
call    2 never executed
    %%%%%:   25-block 23
call    3 never executed
        -:   26:
        -:   27:	//TEST (is_stream_memory_erased (stream_addresses), "Stream deletion check");
        -:   28://	ERASE (&stream_addresses, 3 * sizeof (void*));
        -:   29:/*
        -:   30:	BYTE* ptr_b = (void*) stream;
        -:   31:	BYTE* ptr_adr = (void*) (stream -> address);
        -:   32:	BYTE* ptr_b_f = (void*) stream;
        -:   33:
        -:   34:	for (size_t i = 0; i < sizeof (Stream); i++) {
        -:   35:		printf("%02x ", *ptr_b);
        -:   36:		ptr_b = ptr_b + 1;
        -:   37:	}
        -:   38:
        -:   39:	printf("\n");
        -:   40:
        -:   41:	delete_stream (&stream);
        -:   42:
        -:   43:	for (size_t i = 0; i < sizeof (size_t); i++) {
        -:   44:		printf("%02x ", *ptr_adr);
        -:   45:		ptr_adr = ptr_adr + 1;
        -:   46:	}
        -:   47:
        -:   48:	printf("\n");
        -:   49:
        -:   50:	for (size_t i = 0; i < sizeof (Stream); i++) {
        -:   51:		printf ("%02x ", *ptr_b_f);
        -:   52:		ptr_b_f = ptr_b_f + 1;
        -:   53:	}
        -:   54:
        -:   55:	printf("\n");
        -:   56:*/
        -:   57://	TEST (NULL == stream, "Address nullified check");
        -:   58://	TEST (sizeof (int*) == sizeof (stream), "De-allocated block-size check");
        -:   59://	TEST (NULL == stream, "Address nullify check");
        -:   60://	TEST (ptr != vptr, "Address validation check");
        -:   61://	TEST (n != *((int*) vptr), "Content check");
        -:   62:/*
        -:   63:	Stream* str1 = create_stream (5, "Hello");
        -:   64:	Stream* str2 = create_stream (5, "World");
        -:   65:	stream = concatenate_streams (2, str1, str2);
        -:   66:	TEST (stream -> length == str1 -> length + str2 -> length, "Checked concatenated stream lengths");
        -:   67:	ghost_stream = create_stream (10, "HelloWorld");
        -:   68:	TEST (Cmp_Different != compare_streams (stream, ghost_stream), "Matched concatenated streams");
        -:   69:	delete_stream (&ghost_stream);
        -:   70:	delete_stream (&stream);
        -:   71:	delete_stream (&str1);
        -:   72:	delete_stream (&str2);
        -:   73:	stream = create_stream (5, "Radar");
        -:   74:	TEST (1 == get_char_first_index (stream, 'a'), "Matched first index of character in given Stream");
        -:   75:	TEST (3 == get_char_last_index (stream, 'a'), "Matched last index of character in given Stream");
        -:   76:	delete_stream (&stream);
        -:   77:*/
    #####:   78:	printf (BOLD_YELLOW "...Unit test ends!" BOLD_MAGENTA " [Stream]\n" RESET_STYLE);
    %%%%%:   78-block 24
call    0 never executed
    #####:   79:}
